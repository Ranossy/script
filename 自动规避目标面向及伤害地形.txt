--用于单刷时规避Boss地形伤害或面向，请配合宏使用，面向判定照搬了(°―°〃)大佬的面向宏算法。
--伤害地形规避写成了战斗中才会触发，需要伤害地形为npc才可规避，要找到伤害地形的Npc模板ID，替换语句中的hqbj=伤害地形半径（尺） hqid=伤害地形npc模板ID
--规避面向只要有目标就会触发，可修改angle为需要规避的目标面向角度（角度制） 实际移动角度为angle+10°。原因不明的需要与目标距离超过1尺才能生效
s_cmd.Tag("规避")
---------------------------------------------------------------------------------
--以下为躲避伤害地形命令
--hqbj=伤害地形半径（尺） hqid=伤害地形npc模板ID 实际移动距离为伤害地形半径+0.5尺
--野人谷地刺
local hqbj = 3 local hqid = 36774 if GetClientPlayer().bFightState then local huoquan = s_util.GetNpc(hqid, hqbj+1) local target = s_util.GetTarget(GetClientPlayer()) local tgX,tY,hX,hY,tR,hR,A,B,a,b,c=0,0,0,0,0,0,0,0,0,0,0 local finX1,finX2,finY1,finY2,dis1,dis2=0,0,0,0,0,0 if huoquan and target then tgX = target.nX tY = target.nY hX = huoquan.nX hY = huoquan.nY tR = ((tgX-GetClientPlayer().nX)^2+(tY-GetClientPlayer().nY)^2)^0.5 hR = hqbj*64+32 A = (tR*tR-hR*hR-tgX*tgX+hX*hX-tY*tY+hY*hY)/(2*(hY-tY)) B = (hX-tgX)/(hY-tY) a = 1+B*B b = -2*(tgX+(A-tY)*B) c = tgX*tgX+(A-tY)*(A-tY)-tR*tR finX1 = (-b+(b*b-4*a*c)^0.5)/(2*a) finY1 = A-B*finX1 finX2 = (-b-(b*b-4*a*c)^0.5)/(2*a) finY2 = A-B*finX2 dis1 = ((finX1-GetClientPlayer().nX)^2+(finY1-GetClientPlayer().nY)^2)^0.5 dis2 = ((finX2-GetClientPlayer().nX)^2+(finY2-GetClientPlayer().nY)^2)^0.5 end if huoquan and s_util.GetDistance(huoquan, GetClientPlayer()) < hqbj and target then if dis1>=dis2 then s_cmd.MoveTo(finX2, finY2, huoquan.nZ) else s_cmd.MoveTo(finX1, finY1, huoquan.nZ) end else s_cmd.Next() end else s_cmd.Next() end
--夜狼山火圈
local hqbj = 3 local hqid = 36780 if GetClientPlayer().bFightState then local huoquan = s_util.GetNpc(hqid, hqbj+1) local target = s_util.GetTarget(GetClientPlayer()) local tgX,tY,hX,hY,tR,hR,A,B,a,b,c=0,0,0,0,0,0,0,0,0,0,0 local finX1,finX2,finY1,finY2,dis1,dis2=0,0,0,0,0,0 if huoquan and target then tgX = target.nX tY = target.nY hX = huoquan.nX hY = huoquan.nY tR = ((tgX-GetClientPlayer().nX)^2+(tY-GetClientPlayer().nY)^2)^0.5 hR = hqbj*64+32 A = (tR*tR-hR*hR-tgX*tgX+hX*hX-tY*tY+hY*hY)/(2*(hY-tY)) B = (hX-tgX)/(hY-tY) a = 1+B*B b = -2*(tgX+(A-tY)*B) c = tgX*tgX+(A-tY)*(A-tY)-tR*tR finX1 = (-b+(b*b-4*a*c)^0.5)/(2*a) finY1 = A-B*finX1 finX2 = (-b-(b*b-4*a*c)^0.5)/(2*a) finY2 = A-B*finX2 dis1 = ((finX1-GetClientPlayer().nX)^2+(finY1-GetClientPlayer().nY)^2)^0.5 dis2 = ((finX2-GetClientPlayer().nX)^2+(finY2-GetClientPlayer().nY)^2)^0.5 end if huoquan and s_util.GetDistance(huoquan, GetClientPlayer()) < hqbj and target then if dis1>=dis2 then s_cmd.MoveTo(finX2, finY2, huoquan.nZ) else s_cmd.MoveTo(finX1, finY1, huoquan.nZ) end else s_cmd.Next() end else s_cmd.Next() end
--太原木桩教官（测试用）
local hqbj = 6 local hqid = 24543 if GetClientPlayer().bFightState then local huoquan = s_util.GetNpc(hqid, hqbj+1) local target = s_util.GetTarget(GetClientPlayer()) local tgX,tY,hX,hY,tR,hR,A,B,a,b,c=0,0,0,0,0,0,0,0,0,0,0 local finX1,finX2,finY1,finY2,dis1,dis2=0,0,0,0,0,0 if huoquan and target then tgX = target.nX tY = target.nY hX = huoquan.nX hY = huoquan.nY tR = ((tgX-GetClientPlayer().nX)^2+(tY-GetClientPlayer().nY)^2)^0.5 hR = hqbj*64+32 A = (tR*tR-hR*hR-tgX*tgX+hX*hX-tY*tY+hY*hY)/(2*(hY-tY)) B = (hX-tgX)/(hY-tY) a = 1+B*B b = -2*(tgX+(A-tY)*B) c = tgX*tgX+(A-tY)*(A-tY)-tR*tR finX1 = (-b+(b*b-4*a*c)^0.5)/(2*a) finY1 = A-B*finX1 finX2 = (-b-(b*b-4*a*c)^0.5)/(2*a) finY2 = A-B*finX2 dis1 = ((finX1-GetClientPlayer().nX)^2+(finY1-GetClientPlayer().nY)^2)^0.5 dis2 = ((finX2-GetClientPlayer().nX)^2+(finY2-GetClientPlayer().nY)^2)^0.5 end if huoquan and s_util.GetDistance(huoquan, GetClientPlayer()) < hqbj and target then if dis1>=dis2 then s_cmd.MoveTo(finX2, finY2, huoquan.nZ) else s_cmd.MoveTo(finX1, finY1, huoquan.nZ) end else s_cmd.Next() end else s_cmd.Next() end
---------------------------------------------------------------------------------
--以下为规避面向命令  angle为需要规避的目标面向角度（角度制） 实际移动角度为angle+10°
--local angle=120 local ang = (angle+10)*math.pi/360 local player = GetClientPlayer() local target = s_util.GetTarget(player) if target then local rd = (target.nFaceDirection%256)*math.pi/128 local dx = player.nX - target.nX local dy = player.nY - target.nY local length = math.sqrt(dx*dx+dy*dy) local tface = math.acos(dx/length*math.cos(rd)+dy/length*math.sin(rd)) local pface= angle*math.pi/360 local x1,y1,x2,y2,ddx,ddy,leng,rrd,finX,finY,finX1,finY1,finX2,finY2,dis1,dis2 = 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 if tface <= pface then x1=target.nX y1=target.nY x2=player.nX y2=player.nY ddx = x2 - x1 ddy = y2 - y1 leng = math.sqrt(ddx*ddx+ddy*ddy) rrd = (target.nFaceDirection%256)*math.pi/128 finX = leng*math.cos(rrd)+x1 finY = leng*math.sin(rrd)+y1 finX1 = (finX-x1)*math.cos(ang)-(finY-y1)*math.sin(ang)+x1 finY1 = (finX-x1)*math.sin(ang)+(finY-y1)*math.cos(ang)+y1 finX2 = (finX-x1)*math.cos(ang)+(finY-y1)*math.sin(ang)+x1 finY2 = (finY-y1)*math.cos(ang)-(finX-x1)*math.sin(ang)+y1 dis1 = math.sqrt((x2-finX1)^2+(y2-finY1)^2) dis2 = math.sqrt((x2-finX2)^2+(y2-finY2)^2) if dis1 <= dis2 then s_cmd.MoveTo(finX1, finY1, target.nZ)  else s_cmd.MoveTo(finX2, finY2, target.nZ) end else s_cmd.Next() end else s_cmd.Next() end
----------------------------------------------------------------------------------
s_cmd.Goto("规避")